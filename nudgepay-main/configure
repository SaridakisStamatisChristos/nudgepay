#!/usr/bin/env bash
set -euo pipefail

# Lightweight configure script intended for CI/CD systems that expect a
# `./configure` entry-point.  The script performs fast pre-flight checks and
# gives actionable guidance when something is missing.

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
APP_DIR="${ROOT_DIR}/nudgepay"

usage() {
  cat <<'EOF'
Usage: ./configure [--help]

Validates that required tooling is available to run the NudgePay application
and its CI entrypoints.  No files are modified.
EOF
}

if [[ ${1:-} == "--help" ]]; then
  usage
  exit 0
fi

if [[ ! -d "${APP_DIR}" ]]; then
  echo "configure: expected application sources in \"nudgepay\"" >&2
  exit 1
fi

require_command() {
  local name="$1"
  if ! command -v "$name" >/dev/null 2>&1; then
    echo "configure: missing required command: $name" >&2
    exit 1
  fi
}

PYTHON_BIN="${PYTHON:-python3}"
require_command "$PYTHON_BIN"
require_command pip3
require_command make

PY_VERSION="$("$PYTHON_BIN" -c 'import sys; print(".".join(map(str, sys.version_info[:3])))')"
REQUIRED_MAJOR=3
REQUIRED_MINOR=10

IFS='.' read -r MAJOR MINOR _ <<<"$PY_VERSION"
if (( MAJOR < REQUIRED_MAJOR )) || { (( MAJOR == REQUIRED_MAJOR )) && (( MINOR < REQUIRED_MINOR )); }; then
  echo "configure: python >= ${REQUIRED_MAJOR}.${REQUIRED_MINOR} is required (found ${PY_VERSION})" >&2
  exit 1
fi

# Verify that the CI entrypoint is wired correctly so users do not discover it
# only after kicking off a long-running job.
if ! make --directory "$APP_DIR" --just-print ci >/dev/null 2>&1; then
  echo "configure: unable to evaluate 'make ci' in ${APP_DIR}" >&2
  exit 1
fi

echo "configure: prerequisites satisfied (python ${PY_VERSION})"
